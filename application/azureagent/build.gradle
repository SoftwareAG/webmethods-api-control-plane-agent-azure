buildscript {
	ext {
		bas = [
				version: 'latest.milestone',
		]
		jacksonVersion = '2.15.2'
		httpClientVersion = '4.5.13'
		httpCoreVersion = '4.4.14'
		junitVersion = '5.6.0'
		log4jVersion = '2.21.1'
		junitJupiterVersion = '5.10.1'
		junitPlatformVersion = '1.10.1'
		junitMockitoVersion = '5.7.0'
		bytebuddyVersion = '1.14.11'
		nettyVersion = '4.1.105.Final'
		nettyCodecVersion = '4.1.100'
		nettyHandlerVersion = '4.1.101'
		commonsLoggingVersion = '1.2'
		springVersion = '6.1.3'
		micrometerVersion = '1.12.2'
	}

}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.4'
	id 'io.spring.dependency-management' version '1.1.4'
	id "io.freefair.lombok" version "6.4.3"
}
apply plugin: 'jacoco'

group = 'com.softwareag.controlplane.agent.azure'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation fileTree(dir: '../../libs', include: '*.jar')
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-validation:3.2.2'
	implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
	implementation 'commons-codec:commons-codec:1.16.0'
	implementation 'commons-logging:commons-logging:1.2'
	implementation ('com.azure.resourcemanager:azure-resourcemanager-apimanagement:1.0.0-beta.4')
	implementation ('com.azure.resourcemanager:azure-resourcemanager-subscription:1.0.0-beta.2')
	implementation("com.azure:azure-identity:1.11.0")
	implementation("com.azure:azure-monitor-query:1.2.7")
	// https://mvnrepository.com/artifact/com.azure.resourcemanager/azure-resourcemanager-resources
	implementation 'com.azure.resourcemanager:azure-resourcemanager-resources:2.38.0'


	implementation(
			"com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}",
			"com.fasterxml.jackson.core:jackson-core:${jacksonVersion}",
			"com.fasterxml.jackson.datatype:jackson-datatype-guava:${jacksonVersion}",
			"com.fasterxml.jackson.datatype:jackson-datatype-jdk8:${jacksonVersion}",
			"com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonVersion}",
			"com.fasterxml.jackson.jaxrs:jackson-jaxrs-base:${jacksonVersion}",
			"com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:${jacksonVersion}" ,
			"com.fasterxml.jackson.module:jackson-module-jaxb-annotations:${jacksonVersion}",
			"com.fasterxml.jackson.module:jackson-module-parameter-names:${jacksonVersion}",
			"com.fasterxml.jackson.dataformat:jackson-dataformat-smile:${jacksonVersion}",
			"com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:${jacksonVersion}",
			"com.fasterxml.jackson.dataformat:jackson-dataformat-cbor:${jacksonVersion}",
			"com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}",
			"org.apache.httpcomponents:httpclient:${httpClientVersion}",
			"org.apache.httpcomponents:httpcore:${httpCoreVersion}",
			"org.slf4j:slf4j-api:2.0.9",
			"org.apache.logging.log4j:log4j-core:$log4jVersion",
			"org.apache.logging.log4j:log4j-api:$log4jVersion",
			"org.apache.logging.log4j:log4j-slf4j2-impl:$log4jVersion",
			"org.junit.jupiter:junit-jupiter:$junitJupiterVersion",
			"org.junit.jupiter:junit-jupiter-api:$junitJupiterVersion",
			"org.junit.jupiter:junit-jupiter-params:$junitJupiterVersion",
			"org.junit.jupiter:junit-jupiter-engine:$junitJupiterVersion",
			"org.junit.platform:junit-platform-commons:$junitPlatformVersion",
			"org.junit.platform:junit-platform-engine:$junitPlatformVersion",
			"org.mockito:mockito-junit-jupiter:$junitMockitoVersion",
			"org.mockito:mockito-core:$junitMockitoVersion",
			"org.mockito:mockito-junit-jupiter:$junitMockitoVersion",
			"org.objenesis:objenesis:3.1",
			"net.bytebuddy:byte-buddy:$bytebuddyVersion",
			"net.bytebuddy:byte-buddy-agent:$bytebuddyVersion",
			"io.netty:netty-codec-http:$nettyVersion",
			"io.netty:netty-common:$nettyVersion",
			"io.netty:netty-buffer:$nettyVersion",
			"io.netty:netty-transport:$nettyVersion",
			"io.netty:netty-resolver:$nettyVersion",
			"io.netty:netty-codec:$nettyVersion",
			"io.netty:netty-handler:$nettyVersion",
			"io.netty:netty-transport-native-unix-common:$nettyVersion",
			"io.netty:netty-codec-http2:$nettyVersion",
			"io.netty:netty-resolver-dns:$nettyVersion",
			"io.netty:netty-codec-dns:$nettyVersion",
			"io.netty:netty-resolver-dns-native-macos:$nettyVersion",
			"io.netty:netty-resolver-dns-classes-macos:$nettyVersion",
			"io.netty:netty-transport-native-epoll:$nettyVersion",
			"io.netty:netty-transport-classes-epoll:$nettyVersion",
			"io.netty:netty-handler-proxy:$nettyVersion",
			"io.netty:netty-codec-socks:$nettyVersion",
			"org.springframework:spring-webflux:$springVersion",
			"org.springframework:spring-web:$springVersion",
			"org.springframework:spring-core:$springVersion",
			"org.springframework:spring-context:$springVersion",
			"org.springframework:spring-beans:$springVersion",
			"io.projectreactor.netty:reactor-netty:1.1.15",
			"io.projectreactor:reactor-core:3.6.2",
			"org.reactivestreams:reactive-streams:1.0.4",
			"io.projectreactor.netty:reactor-netty-http:1.1.15",
			"io.projectreactor.netty:reactor-netty-core:1.1.15",
			"io.micrometer:micrometer-core:$micrometerVersion",
			"io.micrometer:micrometer-commons:$micrometerVersion",
			"io.micrometer:micrometer-observation:$micrometerVersion",
			"org.opentest4j:opentest4j:1.2.0"

	)
	// https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
	implementation 'org.apache.commons:commons-lang3:3.14.0'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation(
			"org.junit.jupiter:junit-jupiter:$junitJupiterVersion",
			"org.junit.jupiter:junit-jupiter-api:$junitJupiterVersion",
			"org.junit.jupiter:junit-jupiter-params:$junitJupiterVersion",
			"org.junit.jupiter:junit-jupiter-engine:$junitJupiterVersion",
			"org.junit.platform:junit-platform-commons:$junitPlatformVersion",
			"org.junit.platform:junit-platform-engine:$junitPlatformVersion",
			"org.mockito:mockito-junit-jupiter:$junitMockitoVersion",
			"org.mockito:mockito-core:$junitMockitoVersion",
			"org.mockito:mockito-junit-jupiter:$junitMockitoVersion",
			"org.objenesis:objenesis:3.1.0",
			"net.bytebuddy:byte-buddy:$bytebuddyVersion",
			"net.bytebuddy:byte-buddy-agent:$bytebuddyVersion",
			"org.opentest4j:opentest4j:1.2.0",
			'jakarta.validation:jakarta.validation-api:3.0.2',
			'org.springframework.boot:spring-boot-starter-validation:3.2.2',
			'com.azure.resourcemanager:azure-resourcemanager-apimanagement:1.0.0-beta.4',
			"com.azure:azure-identity:1.11.0",
			"com.azure:azure-monitor-query:1.2.7"
	)
}

configurations {
	all {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

jacocoTestReport {
	dependsOn test // tests are required to run before generating the report
	reports {
		html.outputLocation = layout.buildDirectory.dir("$buildDir/reports/jacoco/html")
	}
	finalizedBy jacocoTestCoverageVerification
}
jacoco {
	reportsDirectory = layout.buildDirectory.dir("$buildDir/reports/jacoco")
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
					minimum = 0.10
			}
		}
	}
}
