ext {
    jacksonVersion = '2.15.2'
    micrometerVersion = '1.11.3'
    log4jVersion = '2.22.0'
    nettyVersion = '4.1.97.Final'
    nettyCodecVersion = '4.1.100.Final'
    nettyHandlerVersion = '4.1.101.Final'
    springVersion = '6.0.14'
    springSecurityVersion = '6.1.3'
    springBootVersion = '3.1.3'
    junitPlatformVersion = '1.9.3'
    junitJupiterVersion = '5.9.3'
    junitMockitoVersion = '5.3.1'
    bytebuddyVersion = '1.14.6'
    apacheCommonsLang3Version = '3.12.0'
    apacheLog4jTemplateVersion = '2.20.0'
    azureSdkVersion = '1.0.0-beta.4'
    azureSubscriptionVersion = '1.0.0-beta.2'
    azureIdentityVersion = '1.12.1'
    azureMonitorVersion = '1.2.7'
    azureResourceManagerVersion = '2.38.0'
    azureMsal4jVersion = '1.15.0'
    azureJsonVersion = '1.1.0'
    azureCoreVersion = '1.49.0'
    azureJnaVersion= '5.6.0'
    azureMsal4jExtVersion= '1.3.0'
    tomcatVersion = '10.1.16'
    junitPlatformVersion = '1.9.3'
    junitJupiterVersion = '5.9.3'
    junitMockitoVersion = '5.3.1'



    apache = [
            "org.apache.commons:commons-lang3:$apacheCommonsLang3Version",
            'commons-codec:commons-codec:1.11',
            "org.apache.logging.log4j:log4j-layout-template-json:$apacheLog4jTemplateVersion",
    ]

    json = [
            'org.json:json:20231013'
    ]

    azureApiManagement = [
            "com.azure.resourcemanager:azure-resourcemanager-apimanagement:$azureSdkVersion",
    ]

    azureSubscription = [
            "com.azure.resourcemanager:azure-resourcemanager-subscription:$azureSubscriptionVersion"
    ]

    azureIdentity = [
            "com.azure:azure-identity:$azureIdentityVersion",
    ]

    azureTranstiveDependency = [
            'asm:asm:3.3.1',
            'net.minidev:asm:1.0.2',
            "com.microsoft.azure:msal4j:$azureMsal4jVersion",
            "com.azure:azure-core-http-netty:$azureMsal4jVersion",
            "com.azure:azure-json:$azureJsonVersion",
            "com.azure:azure-core:$azureCoreVersion",
            "net.java.dev.jna:jna-platform:$azureJnaVersion",
            "com.microsoft.azure:msal4j-persistence-extension:$azureMsal4jExtVersion",

    ]

    azureMonitor = [
            "com.azure:azure-monitor-query:$azureMonitorVersion",
    ]

    resourcemanager = [
            "com.azure.resourcemanager:azure-resourcemanager-resources:$azureResourceManagerVersion",
    ]

    jakartaJavax = [
            'jakarta.validation:jakarta.validation-api:3.0.2',
            'jakarta.el:jakarta.el-api:5.0.1',
            'javax.el:javax.el-api:2.2.4',
            'org.glassfish.web:javax.el:2.2.4',
    ]

    azureDependency = [
            "com.azure.resourcemanager:azure-resourcemanager-apimanagement:$azureSdkVersion",
            "com.azure.resourcemanager:azure-resourcemanager-subscription:$azureSubscriptionVersion",
            "com.azure:azure-identity:$azureIdentityVersion",
            "com.azure.resourcemanager:azure-resourcemanager-resources:$azureResourceManagerVersion",
            "com.azure:azure-monitor-query:$azureMonitorVersion",
    ]

    springBoot = [
            "org.springframework.boot:spring-boot-starter-actuator:$springBootVersion",
            "org.springframework.boot:spring-boot-starter:$springBootVersion",
            "org.springframework.boot:spring-boot-autoconfigure:$springBootVersion",
            "org.springframework.boot:spring-boot-starter-logging:$springBootVersion",
            "org.springframework.boot:spring-boot-starter-web:$springBootVersion",
            "org.springframework.boot:spring-boot-starter-json:$springBootVersion",
            "org.springframework.boot:spring-boot-actuator-autoconfigure:$springBootVersion",
            "org.springframework.boot:spring-boot-actuator:$springBootVersion",
            "org.springframework.boot:spring-boot:$springBootVersion",
            "org.springframework.boot:spring-boot-starter-tomcat:$springBootVersion",
            "org.springframework.session:spring-session-core:3.0.1",
            "org.springframework.boot:spring-boot-starter-validation:$springBootVersion",
            "org.springframework.boot:spring-boot-starter-security:$springBootVersion",
            "org.springframework.boot:spring-boot-starter-webflux:$springBootVersion",
            "org.springframework.boot:spring-boot-starter-reactor-netty:$springBootVersion",
    ]

    spring = [
            "org.springframework:spring-core:$springVersion",
            "org.springframework:spring-jcl:$springVersion",
            "org.springframework:spring-context:$springVersion",
            "org.springframework:spring-aop:$springVersion",
            "org.springframework:spring-beans:$springVersion",
            "org.springframework:spring-expression:$springVersion",
            "org.springframework:spring-web:$springVersion",
            "org.springframework:spring-webmvc:$springVersion",
            "org.springframework:spring-webflux:$springVersion",
            "org.springframework:spring-tx:$springVersion",
    ]


    springBootAnnotationProcessor = [
            "org.springframework.boot:spring-boot-configuration-processor:$springBootVersion"
    ]

    jackson = [
            "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}",
            "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}",
            "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}",
            "com.fasterxml.jackson.datatype:jackson-datatype-guava:${jacksonVersion}",
            "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:${jacksonVersion}",
            "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonVersion}",
            "com.fasterxml.jackson.jaxrs:jackson-jaxrs-base:${jacksonVersion}",
            "com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:${jacksonVersion}",
            "com.fasterxml.jackson.module:jackson-module-jaxb-annotations:${jacksonVersion}",
            "com.fasterxml.jackson.module:jackson-module-parameter-names:${jacksonVersion}",
            "com.fasterxml.jackson.dataformat:jackson-dataformat-smile:${jacksonVersion}",
            "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:${jacksonVersion}",
            "com.fasterxml.jackson.dataformat:jackson-dataformat-cbor:${jacksonVersion}",
    ]

    log4j = [
            "org.slf4j:slf4j-api:2.0.9",
            "org.apache.logging.log4j:log4j-core:$log4jVersion",
            "org.apache.logging.log4j:log4j-api:$log4jVersion",
            "org.apache.logging.log4j:log4j-slf4j2-impl:$log4jVersion",
    ]

    micrometer = [
            "io.micrometer:micrometer-core:$micrometerVersion",
            "io.micrometer:micrometer-commons:$micrometerVersion",
            "io.micrometer:micrometer-observation:$micrometerVersion",
    ]

    netty = [
            "io.netty:netty-codec-http:$nettyVersion",
            "io.netty:netty-common:$nettyVersion",
            "io.netty:netty-buffer:$nettyVersion",
            "io.netty:netty-transport:$nettyVersion",
            "io.netty:netty-resolver:$nettyVersion",
            "io.netty:netty-codec:$nettyCodecVersion",
            "io.netty:netty-handler:$nettyHandlerVersion",
            "io.netty:netty-transport-native-unix-common:$nettyVersion",
            "io.netty:netty-codec-http2:$nettyCodecVersion",
            "io.netty:netty-resolver-dns:$nettyVersion",
            "io.netty:netty-codec-dns:$nettyVersion",
            "io.netty:netty-resolver-dns-native-macos:$nettyVersion",
            "io.netty:netty-resolver-dns-classes-macos:$nettyVersion",
            "io.netty:netty-transport-native-epoll:$nettyVersion",
            "io.netty:netty-transport-classes-epoll:$nettyVersion",
            "io.netty:netty-handler-proxy:$nettyVersion",
            "io.netty:netty-codec-socks:$nettyVersion",
    ]

    reactor = [
            "io.projectreactor.netty:reactor-netty:1.0.33",
            "io.projectreactor:reactor-core:3.5.9",
            "org.reactivestreams:reactive-streams:1.0.4",
            "io.projectreactor.netty:reactor-netty-http:1.1.13",
            "io.projectreactor.netty:reactor-netty-core:1.1.10",
    ]

    azureFunctions = [
            "com.microsoft.azure.functions:azure-functions-java-library:3.0.0",
            "org.springframework.boot:spring-boot-starter-validation:$springBootVersion",
            "org.springframework:spring-core:$springVersion",
            "org.springframework:spring-context:$springVersion",
            "org.springframework:spring-beans:$springVersion",
            "org.apache.commons:commons-lang3:$apacheCommonsLang3Version",
            "org.apache.logging.log4j:log4j-layout-template-json:$apacheLog4jTemplateVersion",
            json,
            'org.jboss.logging:jboss-logging:3.5.3.Final',
            'com.nimbusds:oauth2-oidc-sdk:11.9.1',
            'net.minidev:json-smart:2.3',
            'com.nimbusds:nimbus-jose-jwt:9.39.2',
            'com.nimbusds:content-type:2.3'

    ]

    springBootApplication = [
            spring,
            springBoot,
            apache,
            json,
            jakartaJavax,

    ]

    agentSdk = [
            jackson,
            apache,
            log4j,
            micrometer,
            netty,
            reactor,
            spring,
    ]


    //Do not add this for external repo
    transitiveDependencies = [
            "org.springframework.data:spring-data-commons:3.0.6",

            //springframework - security
            "org.springframework.security:spring-security-config:$springSecurityVersion",
            "org.springframework.security:spring-security-core:$springSecurityVersion",
            "org.springframework.security:spring-security-crypto:$springSecurityVersion",
            "org.springframework.security:spring-security-web:$springSecurityVersion",

            //springframework - tomcat
            "org.apache.tomcat.embed:tomcat-embed-core:$tomcatVersion",
            "org.apache.tomcat.embed:tomcat-embed-el:$tomcatVersion",
            "org.apache.tomcat.embed:tomcat-embed-websocket:$tomcatVersion",

            'org.yaml:snakeyaml:1.33',
            'com.google.code.findbugs:jsr305:3.0.2',
            'org.jboss.logging:jboss-logging:3.5.3.Final',
            'jakarta.json:jakarta.json-api:2.1.2',
            'jakarta.activation:jakarta.activation-api:2.1.1',
            'jakarta.annotation:jakarta.annotation-api:2.1.1',
            'org.apache.httpcomponents:httpasyncclient:4.1.5',
            'org.apache.httpcomponents:httpcore-nio:4.4.16',
            'org.hibernate.validator:hibernate-validator:8.0.1.Final',
            'com.google.guava:guava:28.1-jre',
            'commons-logging:commons-logging:1.2',
            'com.fasterxml:classmate:1.5.1',
            'org.hdrhistogram:HdrHistogram:2.1.12',
    ]

    junit = [
            "org.junit.platform:junit-platform-commons:${junitPlatformVersion}",
            "org.junit.platform:junit-platform-engine:${junitPlatformVersion}",
            "org.opentest4j:opentest4j:1.2.0",
            "org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}",
            "org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}",
            "org.mockito:mockito-junit-jupiter:${junitMockitoVersion}",
            "org.mockito:mockito-core:${junitMockitoVersion}",

            "net.bytebuddy:byte-buddy:${bytebuddyVersion}",
            "net.bytebuddy:byte-buddy-agent:${bytebuddyVersion}",

            'commons-logging:commons-logging:1.2',
            'org.apiguardian:apiguardian-api:1.0.0',
            "org.springframework.boot:spring-boot-starter-test:${springBootVersion}",

    ]
}